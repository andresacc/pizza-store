/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.PizzaStore.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class InProcessOrder extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7180998922348015015L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"InProcessOrder\",\"namespace\":\"com.example.PizzaStore.model\",\"fields\":[{\"name\":\"pizzaStyle\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"paymentLink\",\"type\":\"string\"},{\"name\":\"orderId\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<InProcessOrder> ENCODER =
      new BinaryMessageEncoder<InProcessOrder>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<InProcessOrder> DECODER =
      new BinaryMessageDecoder<InProcessOrder>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<InProcessOrder> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<InProcessOrder> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<InProcessOrder> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<InProcessOrder>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this InProcessOrder to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a InProcessOrder from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a InProcessOrder instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static InProcessOrder fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence pizzaStyle;
  @Deprecated public java.lang.CharSequence size;
  @Deprecated public java.lang.CharSequence email;
  @Deprecated public double price;
  @Deprecated public java.lang.CharSequence paymentLink;
  @Deprecated public java.lang.CharSequence orderId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public InProcessOrder() {}

  /**
   * All-args constructor.
   * @param pizzaStyle The new value for pizzaStyle
   * @param size The new value for size
   * @param email The new value for email
   * @param price The new value for price
   * @param paymentLink The new value for paymentLink
   * @param orderId The new value for orderId
   */
  public InProcessOrder(java.lang.CharSequence pizzaStyle, java.lang.CharSequence size, java.lang.CharSequence email, java.lang.Double price, java.lang.CharSequence paymentLink, java.lang.CharSequence orderId) {
    this.pizzaStyle = pizzaStyle;
    this.size = size;
    this.email = email;
    this.price = price;
    this.paymentLink = paymentLink;
    this.orderId = orderId;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return pizzaStyle;
    case 1: return size;
    case 2: return email;
    case 3: return price;
    case 4: return paymentLink;
    case 5: return orderId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: pizzaStyle = (java.lang.CharSequence)value$; break;
    case 1: size = (java.lang.CharSequence)value$; break;
    case 2: email = (java.lang.CharSequence)value$; break;
    case 3: price = (java.lang.Double)value$; break;
    case 4: paymentLink = (java.lang.CharSequence)value$; break;
    case 5: orderId = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'pizzaStyle' field.
   * @return The value of the 'pizzaStyle' field.
   */
  public java.lang.CharSequence getPizzaStyle() {
    return pizzaStyle;
  }


  /**
   * Sets the value of the 'pizzaStyle' field.
   * @param value the value to set.
   */
  public void setPizzaStyle(java.lang.CharSequence value) {
    this.pizzaStyle = value;
  }

  /**
   * Gets the value of the 'size' field.
   * @return The value of the 'size' field.
   */
  public java.lang.CharSequence getSize() {
    return size;
  }


  /**
   * Sets the value of the 'size' field.
   * @param value the value to set.
   */
  public void setSize(java.lang.CharSequence value) {
    this.size = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public double getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(double value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'paymentLink' field.
   * @return The value of the 'paymentLink' field.
   */
  public java.lang.CharSequence getPaymentLink() {
    return paymentLink;
  }


  /**
   * Sets the value of the 'paymentLink' field.
   * @param value the value to set.
   */
  public void setPaymentLink(java.lang.CharSequence value) {
    this.paymentLink = value;
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return The value of the 'orderId' field.
   */
  public java.lang.CharSequence getOrderId() {
    return orderId;
  }


  /**
   * Sets the value of the 'orderId' field.
   * @param value the value to set.
   */
  public void setOrderId(java.lang.CharSequence value) {
    this.orderId = value;
  }

  /**
   * Creates a new InProcessOrder RecordBuilder.
   * @return A new InProcessOrder RecordBuilder
   */
  public static com.example.PizzaStore.model.InProcessOrder.Builder newBuilder() {
    return new com.example.PizzaStore.model.InProcessOrder.Builder();
  }

  /**
   * Creates a new InProcessOrder RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new InProcessOrder RecordBuilder
   */
  public static com.example.PizzaStore.model.InProcessOrder.Builder newBuilder(com.example.PizzaStore.model.InProcessOrder.Builder other) {
    if (other == null) {
      return new com.example.PizzaStore.model.InProcessOrder.Builder();
    } else {
      return new com.example.PizzaStore.model.InProcessOrder.Builder(other);
    }
  }

  /**
   * Creates a new InProcessOrder RecordBuilder by copying an existing InProcessOrder instance.
   * @param other The existing instance to copy.
   * @return A new InProcessOrder RecordBuilder
   */
  public static com.example.PizzaStore.model.InProcessOrder.Builder newBuilder(com.example.PizzaStore.model.InProcessOrder other) {
    if (other == null) {
      return new com.example.PizzaStore.model.InProcessOrder.Builder();
    } else {
      return new com.example.PizzaStore.model.InProcessOrder.Builder(other);
    }
  }

  /**
   * RecordBuilder for InProcessOrder instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<InProcessOrder>
    implements org.apache.avro.data.RecordBuilder<InProcessOrder> {

    private java.lang.CharSequence pizzaStyle;
    private java.lang.CharSequence size;
    private java.lang.CharSequence email;
    private double price;
    private java.lang.CharSequence paymentLink;
    private java.lang.CharSequence orderId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.PizzaStore.model.InProcessOrder.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.pizzaStyle)) {
        this.pizzaStyle = data().deepCopy(fields()[0].schema(), other.pizzaStyle);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.size)) {
        this.size = data().deepCopy(fields()[1].schema(), other.size);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.email)) {
        this.email = data().deepCopy(fields()[2].schema(), other.email);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.price)) {
        this.price = data().deepCopy(fields()[3].schema(), other.price);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.paymentLink)) {
        this.paymentLink = data().deepCopy(fields()[4].schema(), other.paymentLink);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.orderId)) {
        this.orderId = data().deepCopy(fields()[5].schema(), other.orderId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing InProcessOrder instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.PizzaStore.model.InProcessOrder other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.pizzaStyle)) {
        this.pizzaStyle = data().deepCopy(fields()[0].schema(), other.pizzaStyle);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.size)) {
        this.size = data().deepCopy(fields()[1].schema(), other.size);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.email)) {
        this.email = data().deepCopy(fields()[2].schema(), other.email);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.price)) {
        this.price = data().deepCopy(fields()[3].schema(), other.price);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.paymentLink)) {
        this.paymentLink = data().deepCopy(fields()[4].schema(), other.paymentLink);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.orderId)) {
        this.orderId = data().deepCopy(fields()[5].schema(), other.orderId);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'pizzaStyle' field.
      * @return The value.
      */
    public java.lang.CharSequence getPizzaStyle() {
      return pizzaStyle;
    }


    /**
      * Sets the value of the 'pizzaStyle' field.
      * @param value The value of 'pizzaStyle'.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder setPizzaStyle(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.pizzaStyle = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'pizzaStyle' field has been set.
      * @return True if the 'pizzaStyle' field has been set, false otherwise.
      */
    public boolean hasPizzaStyle() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'pizzaStyle' field.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder clearPizzaStyle() {
      pizzaStyle = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'size' field.
      * @return The value.
      */
    public java.lang.CharSequence getSize() {
      return size;
    }


    /**
      * Sets the value of the 'size' field.
      * @param value The value of 'size'.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder setSize(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.size = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'size' field has been set.
      * @return True if the 'size' field has been set, false otherwise.
      */
    public boolean hasSize() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'size' field.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder clearSize() {
      size = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.email = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder clearEmail() {
      email = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public double getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder setPrice(double value) {
      validate(fields()[3], value);
      this.price = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder clearPrice() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentLink' field.
      * @return The value.
      */
    public java.lang.CharSequence getPaymentLink() {
      return paymentLink;
    }


    /**
      * Sets the value of the 'paymentLink' field.
      * @param value The value of 'paymentLink'.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder setPaymentLink(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.paymentLink = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentLink' field has been set.
      * @return True if the 'paymentLink' field has been set, false otherwise.
      */
    public boolean hasPaymentLink() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'paymentLink' field.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder clearPaymentLink() {
      paymentLink = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderId' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrderId() {
      return orderId;
    }


    /**
      * Sets the value of the 'orderId' field.
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder setOrderId(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.orderId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'orderId' field.
      * @return This builder.
      */
    public com.example.PizzaStore.model.InProcessOrder.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public InProcessOrder build() {
      try {
        InProcessOrder record = new InProcessOrder();
        record.pizzaStyle = fieldSetFlags()[0] ? this.pizzaStyle : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.size = fieldSetFlags()[1] ? this.size : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.email = fieldSetFlags()[2] ? this.email : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.price = fieldSetFlags()[3] ? this.price : (java.lang.Double) defaultValue(fields()[3]);
        record.paymentLink = fieldSetFlags()[4] ? this.paymentLink : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.orderId = fieldSetFlags()[5] ? this.orderId : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<InProcessOrder>
    WRITER$ = (org.apache.avro.io.DatumWriter<InProcessOrder>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<InProcessOrder>
    READER$ = (org.apache.avro.io.DatumReader<InProcessOrder>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.pizzaStyle);

    out.writeString(this.size);

    out.writeString(this.email);

    out.writeDouble(this.price);

    out.writeString(this.paymentLink);

    out.writeString(this.orderId);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.pizzaStyle = in.readString(this.pizzaStyle instanceof Utf8 ? (Utf8)this.pizzaStyle : null);

      this.size = in.readString(this.size instanceof Utf8 ? (Utf8)this.size : null);

      this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);

      this.price = in.readDouble();

      this.paymentLink = in.readString(this.paymentLink instanceof Utf8 ? (Utf8)this.paymentLink : null);

      this.orderId = in.readString(this.orderId instanceof Utf8 ? (Utf8)this.orderId : null);

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.pizzaStyle = in.readString(this.pizzaStyle instanceof Utf8 ? (Utf8)this.pizzaStyle : null);
          break;

        case 1:
          this.size = in.readString(this.size instanceof Utf8 ? (Utf8)this.size : null);
          break;

        case 2:
          this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);
          break;

        case 3:
          this.price = in.readDouble();
          break;

        case 4:
          this.paymentLink = in.readString(this.paymentLink instanceof Utf8 ? (Utf8)this.paymentLink : null);
          break;

        case 5:
          this.orderId = in.readString(this.orderId instanceof Utf8 ? (Utf8)this.orderId : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










